# python
import os
import sys
import speech_recognition as sr
from google import genai

# --- Pobranie klucza z zmiennej ≈õrodowiskowej ---
api_key = os.getenv("GEMINI_API_KEY")
if not api_key:
    print("‚ùå Brak zmiennej ≈õrodowiskowej `GEMINI_API_KEY`.")
    print("Ustaw jƒÖ (np. w PowerShell: [Environment]::SetEnvironmentVariable('GEMINI_API_KEY', 'TW√ìJ_KLUCZ', 'User'))")
    sys.exit(1)

# --- Inicjalizacja klienta Gemini ---
client = genai.Client(api_key=api_key)

# --- Rozpoznawanie mowy z mikrofonu ---
recognizer = sr.Recognizer()

with sr.Microphone() as source:
    print("üé§ Powiedz swoje pytanie (m√≥w teraz)...")
    recognizer.adjust_for_ambient_noise(source)  # kalibracja szum√≥w otoczenia
    audio = recognizer.listen(source)

try:
    # rozpoznawanie mowy przy u≈ºyciu Google Speech Recognition
    query = recognizer.recognize_google(audio, language="pl-PL")
    print(f"üó£Ô∏è Rozpoznano: {query}")

    # --- Dodanie instrukcji: wyja≈õnij w 2 zdaniach przed w≈Ça≈õciwym zapytaniem ---
    prompt = f"Wyja≈õnij w dw√≥ch zdaniach (po polsku): {query}"

    # --- Wysy≈Çanie zapytania do Gemini ---
    response = client.models.generate_content(
        model="gemini-2.5-flash",
        contents=prompt
    )

    print("\nü§ñ Odpowied≈∫ Gemini:")
    print(getattr(response, "text", repr(response)))

except sr.UnknownValueError:
    print("‚ùó Nie uda≈Ço siƒô rozpoznaƒá mowy.")
except sr.RequestError as e:
    print(f"‚ùó B≈ÇƒÖd po≈ÇƒÖczenia z us≈ÇugƒÖ rozpoznawania mowy: {e}")